definitions:
  entity.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  entity.UserRegistration:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      parameters:
      - description: User login info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.UserLogin'
      produces:
      - application/json
      responses: {}
      summary: Log in with email and password
      tags:
      - user
  /postVideo:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a video file and processes it
      parameters:
      - description: Vidoe File
        in: formData
        name: video
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: File uploaded successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Upload a video
  /predict:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a video file to S3 and prepares it for machine learning
        prediction
      parameters:
      - description: Video file to upload
        in: formData
        name: video
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Upload a video for prediction
      tags:
      - api
  /signup:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: User registration info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.UserRegistration'
      produces:
      - application/json
      responses: {}
      summary: Sign up a new user
      tags:
      - user
  /translate:
    post:
      consumes:
      - application/json
      description: Translates the provided text into the target language
      parameters:
      - description: Text to translate
        in: body
        name: text
        required: true
        schema:
          type: string
      - description: Target language code
        in: body
        name: target_language
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"input_text": "Input text", "translated_text": "Translated
            text", "accuracy":  0.80}'
          schema:
            additionalProperties: true
            type: object
      summary: Translate text
  /uploadtoS3:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a file to S3 bucket
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      - application/json
      responses:
        "200":
          description: File uploaded successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Save video to S3
swagger: "2.0"
